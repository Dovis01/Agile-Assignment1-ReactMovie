{"version":3,"file":"static/js/634.8e7e03be.chunk.js","mappings":"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","sources":["api/tmdb-api.js","components/headerMovieList/index.js","components/spinner/index.js","components/filterMoviesCard/index.js","components/movieCard/index.js","components/movieList/index.js","components/templateMovieListPage/index.js","theme/background.js","../node_modules/@mui/icons-material/CalendarTodayTwoTone.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/icons-material/StarRate.js"],"sourcesContent":["export const getMovies = (args) => {\n    const [, pagePart] = args.queryKey;\n    const { page } = pagePart;\n    return fetch(\n        `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n    })\n        .then((data) =>{\n            const movies = data.results;\n            const pageFirst = data.page;\n            return {\n                page: pageFirst,\n                results: movies,\n                total_results: 10000,\n                total_pages: 500\n            };\n        })\n        .catch((error) => {\n        throw error\n    });\n};\n\nexport const getMovie = (args) => {\n    //console.log(args) -> queryKey JSON\n    const [, idPart] = args.queryKey;\n    const { id } = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getGenres = async () => {\n    return fetch(\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\n        process.env.REACT_APP_TMDB_KEY +\n        \"&language=en-US\"\n    ).then( (response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getMovieImages = ({ queryKey }) => {\n    const [, idPart] = queryKey;\n    const { id } = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then( (response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getMovieReviews = ({ queryKey }) => {\n    const [, idPart] = queryKey;\n    const { id } = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then( (response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    }).catch((error) => {\n        throw error\n    });\n};\n\nexport const getUpcomingMovies = (args) => {\n    const [, pagePart] = args.queryKey;\n    const { page } = pagePart;\n    return fetch(\n        `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${page}`\n    ).then( (response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    }).then((data) =>{\n        const movies = data.results;\n        const pageFirst = data.page;\n        return {\n            page: pageFirst,\n            results: movies,\n            total_results: 537,\n            total_pages: 14\n        };\n    }).catch((error) => {\n        throw error\n    });\n};\n\nexport const getWeekTrendingMovies = (args) => {\n    const [, pagePart] = args.queryKey;\n    const { page } = pagePart;\n    return fetch(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${page}`\n    ).then( (response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    }).then((data) =>{\n        const movies = data.results;\n        const pageFirst = data.page;\n        return {\n            page: pageFirst,\n            results: movies,\n            total_results: 10000,\n            total_pages: 500\n        };\n    }).catch((error) => {\n        throw error\n    });\n};\n\nexport const getMovieVideos = ({queryKey}) => {\n    const [, idPart] = queryKey;\n    const {id} = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getMovieCredits = ({queryKey}) => {\n    const [, idPart] = queryKey;\n    const {id} = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getPopularPeople  = (args) => {\n    const [, pagePart] = args.queryKey;\n    const { page } = pagePart;\n    return fetch(\n        `https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n    })\n        .then((data) =>{\n            const actors = data.results;\n            const pageFirst = data.page;\n            return {\n                page: pageFirst,\n                results: actors,\n                total_results: 10000,\n                total_pages: 500\n            };\n        })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getPopularPeopleDetail = (args) => {\n    const [, idPart] = args.queryKey;\n    const {id} = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getPeopleImages = ({queryKey}) => {\n    const [, idPart] = queryKey;\n    const {id} = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/person/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getPeopleMovieCredits = ({queryKey}) => {\n    const [, idPart] = queryKey;\n    const {id} = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n\nexport const getPeopleTVCredits = ({queryKey}) => {\n    const [, idPart] = queryKey;\n    const {id} = idPart;\n    return fetch(\n        `https://api.themoviedb.org/3/person/${id}/tv_credits?api_key=${process.env.REACT_APP_TMDB_KEY}`\n    ).then((response) => {\n        if (!response.ok) {\n            throw new Error(response.json().message);\n        }\n        return response.json();\n\n    })\n        .catch((error) => {\n            throw error\n        });\n};\n","import React from \"react\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Header = (props ) => {\n    const title = props.title;\n    const navigate = useNavigate();\n    return (\n        <Paper\n            elevation={5}\n            component=\"div\"\n            sx={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                flexWrap: \"wrap\",\n                marginBottom: 1.5,\n            }}\n        >\n            <IconButton aria-label=\"go back\" onClick={() => navigate(-1)}>\n                <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\n            </IconButton>\n            <Typography variant=\"h4\" component=\"h3\">\n                {title}\n            </Typography>\n            <IconButton aria-label=\"go forward\" onClick={() => navigate(+1)}>\n                <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\n            </IconButton>\n        </Paper>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport default function CircularIndeterminate() {\n    return (\n        <div sx={{\n            display: 'flex',\n            justifyContent: \"center\",\n            '& > * + *': {\n                marginLeft: '2em',\n            }}}>\n            <CircularProgress />\n            <CircularProgress />\n        </div>\n    );\n}","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport TextField from \"@mui/material/TextField\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport img from '../../images/pexels-dziana-hasanbekava-5480827.jpg'\nimport {getGenres} from \"../../api/tmdb-api\";\nimport {useQuery} from \"react-query\";\nimport Spinner from '../spinner'\n\nconst formControl =\n    {\n        margin: 1,\n        minWidth: 220,\n        backgroundColor: \"rgb(255, 255, 255)\"\n    };\n\nexport default function FilterMoviesCard(props) {\n\n    const {data, error, isLoading, isError} = useQuery(\"genres\", getGenres);\n    const sortOptions = [\n        {id: \"none\", name: \"None\"},\n        {id: \"popularity\", name: \"Popularity\"},\n        {id: \"vote_average\", name: \"Rating\"}\n    ];\n    const sortOrder= [\n        {id: \"none\", name: \"None\"},\n        {id: \"asc\", name: \"Asc\"},\n        {id: \"desc\", name: \"Desc\"}\n    ];\n\n    if (isLoading) {\n        return <Spinner/>;\n    }\n\n    if (isError) {\n        return <h1>{error.message}</h1>;\n    }\n    const genres = data.genres;\n    if (genres[0].name !== \"All\") {\n        genres.unshift({id: \"0\", name: \"All\"});\n    }\n\n    const handleChange = (e, type, value) => {\n        e.preventDefault();\n        props.onUserInput(type, value); // NEW\n        if (type === \"sort\") {\n            props.selectSortOption(value);\n        }\n        if (type === \"sortOrder\") {\n            props.selectSortOrder(value);\n        }\n    };\n\n    const handleTextChange = (e) => {\n        handleChange(e, \"name\", e.target.value);\n    };\n\n    const handleGenreChange = (e) => {\n        handleChange(e, \"genre\", e.target.value);\n    };\n    const handleReleaseYearChange = (e) => {\n        handleChange(e, \"year\", e.target.value);\n    }\n    const handleSortChange = (e) => {\n        handleChange(e, \"sort\", e.target.value);\n    }\n    const handleSortOrderChange = (e) => {\n        handleChange(e, \"sortOrder\", e.target.value);\n    }\n\n    return (\n        <Card\n            sx={{\n                maxWidth: 345,\n                backgroundColor: \"rgb(204, 204, 0)\"\n            }}\n            variant=\"outlined\">\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h1\">\n                    <SearchIcon fontSize=\"large\"/>\n                    Filter the movies.\n                </Typography>\n                <TextField\n                    sx={{...formControl}}\n                    id=\"filled-search\"\n                    label=\"Search movie name\"\n                    type=\"search\"\n                    variant=\"filled\"\n                    value={props.titleFilter}\n                    onChange={handleTextChange}\n                />\n                <FormControl sx={{...formControl}}>\n                    <InputLabel id=\"genre-label\">Genre</InputLabel>\n                    <Select\n                        labelId=\"genre-label\"\n                        id=\"genre-select\"\n                        defaultValue=\"\"\n                        value={props.genreFilter}\n                        onChange={handleGenreChange}\n                    >\n                        {genres.map((genre) => {\n                            return (\n                                <MenuItem key={genre.id} value={genre.id}>\n                                    {genre.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <TextField\n                    sx={{...formControl}}\n                    id=\"release-year-search\"\n                    label=\"Search release year\"\n                    type=\"search\"\n                    variant=\"filled\"\n                    value={props.releaseYearFilter}\n                    onChange={handleReleaseYearChange}\n                />\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                    <FormControl sx={{flex: 3, marginRight: '8px', backgroundColor: \"rgb(255, 255, 255)\", margin: 1}}>\n                        <InputLabel id=\"sort-label\">Sort</InputLabel>\n                        <Select\n                            labelId=\"sort-label\"\n                            id=\"sort-option-select\"\n                            defaultValue=\"\"\n                            value={props.sortOption}\n                            onChange={handleSortChange}\n                        >\n                            {sortOptions.map((option) => {\n                                return (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.name}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n\n                    <FormControl sx={{flex: 2, marginLeft: '8px', backgroundColor: \"rgb(255, 255, 255)\", margin: 1}}>\n                        <InputLabel id=\"sort-label\">SortOrder</InputLabel>\n                        <Select\n                            labelId=\"sort-order-label\"\n                            id=\"sort-order-select\"\n                            defaultValue=\"\"\n                            value={props.sortOrder}\n                            onChange={handleSortOrderChange}\n                        >\n                            {sortOrder.map((order) => {\n                                return (\n                                    <MenuItem key={order.id} value={order.id}>\n                                        {order.name}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                </div>\n            </CardContent>\n            <CardMedia\n                sx={{height: 300}}\n                image={img}\n                title=\"Filter\"\n            />\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h1\">\n                    <SearchIcon fontSize=\"large\"/>\n                    Filter the movies.\n                    <br/>\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport CalendarIcon from \"@mui/icons-material/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\nimport StackedLineChartIcon from '@mui/icons-material/StackedLineChart';\nimport Grid from \"@mui/material/Grid\";\nimport img from '../../images/film-poster-placeholder.png'\nimport {Link} from \"react-router-dom\";\nimport backgroundImageStyles from \"../../theme/background\";\nimport Box from \"@mui/material/Box\";\n\nexport default function MovieCard({movie, action, avatarCheck}) {\n\n    return (\n        <Card sx={{maxWidth: 345}} elevation={5} style={backgroundImageStyles.backgroundCardContainer}>\n            <CardHeader\n                avatar={\n                    avatarCheck(movie)\n                }\n                title={\n                    <Typography variant=\"h5\" component=\"p\">\n                        {movie.title}{\" \"}\n                    </Typography>\n                }\n            />\n            <CardMedia\n                sx={{height: 500}}\n                image={\n                    movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        : img\n                }\n            />\n            <CardContent>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\" style={{whiteSpace: 'nowrap'}}>\n                            <CalendarIcon fontSize=\"small\"/>\n                            {movie.release_date}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\" style={{whiteSpace: 'nowrap'}}>\n                            <Box component=\"span\" ml={3}>\n                                <StackedLineChartIcon fontSize=\"medium\"/>\n                                {\" \"} {movie.popularity.toFixed(2)}{\" \"}\n                            </Box>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"p\">\n                            <Box component=\"span\" ml={1}>\n                                <StarRateIcon fontSize=\"small\"/>\n                                {\" \"} {movie.vote_average.toFixed(1)}{\" \"}\n                            </Box>\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions disableSpacing>\n                {action(movie)}\n                <Link to={`/movies/${movie.id}`}>\n                    <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\n                        More Info ...\n                    </Button>\n                </Link>\n            </CardActions>\n        </Card>\n    );\n}","import React from \"react\";\nimport Movie from \"../movieCard\";\nimport Grid from \"@mui/material/Grid\";\n\nconst MovieList = ( {movies, action ,avatarCheck}) => {\n    return movies.map((m) => (\n        <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\n            <Movie key={m.id} movie={m} action={action} avatarCheck={avatarCheck}/>\n        </Grid>\n    ));\n};\n\nexport default MovieList;","import React, {useEffect, useState} from \"react\";\nimport Header from \"../headerMovieList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport MovieList from \"../movieList\";\nimport Grid from \"@mui/material/Grid\";\nimport backgroundImageStyles from \"../../theme/background\";\nimport Paper from \"@mui/material/Paper\";\nimport {Pagination, Stack} from \"@mui/material\";\n\n\nfunction MovieListPageTemplate({movies, title, action, avatarCheck, pageChange, currentPage,totalPages}) {\n    const [nameFilter, setNameFilter] = useState(\"\");\n    const [genreFilter, setGenreFilter] = useState(\"0\");\n    const [releaseYearFilter, setReleaseYearFilter] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"\");\n    const [sortOption, setSortOption] = useState(\"\");\n    const [displayedMovies, setDisplayedMovies] = useState(movies);\n    const genreId = Number(genreFilter);\n\n    const handleChange = (type, value) => {\n        if (type === \"name\") setNameFilter(value);\n        else if (type === \"year\") setReleaseYearFilter(value);\n        else if (type === \"sort\") setSortOption(value);\n        else if (type === \"sortOrder\") setSortOrder(value);\n        else setGenreFilter(value);\n    };\n\n    useEffect(() => {\n        let processedMovies = movies\n            .filter(m => m.title.toLowerCase().includes(nameFilter.toLowerCase()))\n            .filter(m => m.release_date.substring(0, 4).includes(releaseYearFilter))\n            .filter(m => (genreId > 0 ? m.genre_ids.includes(genreId) : true));\n\n        if (sortOption === \"popularity\" && sortOrder !== \"none\" && sortOrder) {\n            processedMovies = processedMovies.sort((a, b) => {\n                return sortOrder === 'desc' ? b.popularity - a.popularity : a.popularity - b.popularity;\n            });\n        } else if (sortOption === \"vote_average\" && sortOrder !== \"none\" && sortOrder) {\n            processedMovies = processedMovies.sort((a, b) => {\n                return sortOrder === 'desc' ? b.vote_average - a.vote_average : a.vote_average - b.vote_average;\n            });\n        }\n        setDisplayedMovies(processedMovies);\n    },  [movies, nameFilter, releaseYearFilter, genreId, sortOption, sortOrder]);\n\n\n    const selectSortOption = (selectedOption) => {\n        if (selectedOption === \"none\") {\n            setSortOption(null);\n        }\n    };\n\n    const selectSortOrder = (selectedOrder) => {\n        if (selectedOrder === \"none\") {\n            setSortOrder(null);\n        }\n    };\n\n    return (\n        <Grid container sx={{padding: '20px'}} style={backgroundImageStyles.backgroundMainContainer}>\n            <Grid item xs={12}>\n                <Header title={title}/>\n            </Grid>\n            <Grid item container spacing={5}>\n                <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\n                    <FilterCard\n                        onUserInput={handleChange}\n                        titleFilter={nameFilter}\n                        genreFilter={genreFilter}\n                        sortOption={sortOption}\n                        sortOrder={sortOrder}\n                        selectSortOption={selectSortOption}\n                        selectSortOrder={selectSortOrder}\n                        releaseYearFilter={releaseYearFilter}\n                    />\n                </Grid>\n                <MovieList action={action} movies={displayedMovies} avatarCheck={avatarCheck}></MovieList>\n            </Grid>\n            <Paper\n                elevation={5}\n                component=\"div\"\n                sx={{\n                    display: \"flex\",\n                    marginTop: 2.0,\n                    left: '50%',\n                    transform: 'translateX(-50%)',\n                    zIndex: 1000,\n                    position: 'relative',\n                    padding: 1.1,\n                }}\n            >\n                <Stack spacing={2}>\n                    <Pagination count={totalPages} page={currentPage} onChange={pageChange} variant=\"outlined\"\n                                shape=\"rounded\" size=\"large\" boundaryCount={2} showFirstButton showLastButton/>\n                </Stack>\n            </Paper>\n        </Grid>\n    );\n}\n\nexport default MovieListPageTemplate;","import backgroundMainImage from '../images/pexels-eberhard-grossgasteiger-1366919.jpg';\nimport backgroundCardImage from '../images/pexels-laura-tancredi-7078717.jpg';\n\nconst backgroundImageStyles = {\n    backgroundMainContainer: {\n        backgroundImage: `url(${backgroundMainImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        width: '100%',\n        zIndex: -1,\n        position: 'absolute',\n        right: 0,\n        left: 0,\n    },\n    backgroundCardContainer: {\n        backgroundImage: `url(${backgroundCardImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        zIndex: -1,\n    },\n    backgroundDetailContainer:{\n        backgroundColor: 'rgba(219,232,240,0.7)',\n        position: 'fixed', // 使用 fixed 而不是 absolute 以确保它覆盖整个屏幕\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n    },\n};\n\nexport default backgroundImageStyles;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 2v3H4V5h16zM4 21V10h16v11H4z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 5.01h16V8H4z\",\n  opacity: \".3\"\n}, \"1\")], 'CalendarTodayTwoTone');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.43 10 12 2l-2.43 8H2l6.18 4.41L5.83 22 12 17.31 18.18 22l-2.35-7.59L22 10z\"\n}), 'StarRate');\nexports.default = _default;"],"names":["getMovies","args","page","_slicedToArray","queryKey","fetch","concat","process","then","response","ok","Error","json","message","data","movies","results","total_results","total_pages","catch","error","getMovie","id","getGenres","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","apply","arguments","getMovieImages","_ref2","getMovieReviews","_ref3","getUpcomingMovies","getWeekTrendingMovies","getMovieVideos","_ref4","getMovieCredits","_ref5","getPopularPeople","actors","getPopularPeopleDetail","getPeopleImages","_ref6","getPeopleMovieCredits","_ref7","getPeopleTVCredits","_ref8","props","title","navigate","useNavigate","_jsxs","Paper","elevation","component","sx","display","justifyContent","flexWrap","marginBottom","children","_jsx","IconButton","onClick","ArrowBackIcon","color","fontSize","Typography","variant","ArrowForwardIcon","CircularIndeterminate","marginLeft","CircularProgress","formControl","margin","minWidth","backgroundColor","FilterMoviesCard","_useQuery","useQuery","isLoading","isError","Spinner","genres","name","unshift","handleChange","e","type","value","preventDefault","onUserInput","selectSortOption","selectSortOrder","Card","maxWidth","CardContent","SearchIcon","TextField","_objectSpread","label","titleFilter","onChange","target","FormControl","InputLabel","Select","labelId","defaultValue","genreFilter","map","genre","MenuItem","releaseYearFilter","style","flex","marginRight","sortOption","option","sortOrder","order","CardMedia","height","image","img","MovieCard","movie","action","avatarCheck","backgroundImageStyles","backgroundCardContainer","CardHeader","avatar","poster_path","Grid","container","item","xs","whiteSpace","CalendarIcon","release_date","Box","ml","StackedLineChartIcon","popularity","toFixed","StarRateIcon","vote_average","CardActions","disableSpacing","Link","to","Button","size","m","sm","md","lg","xl","Movie","pageChange","currentPage","totalPages","_useState","useState","_useState2","nameFilter","setNameFilter","_useState3","_useState4","setGenreFilter","_useState5","_useState6","setReleaseYearFilter","_useState7","_useState8","setSortOrder","_useState9","_useState10","setSortOption","_useState11","_useState12","displayedMovies","setDisplayedMovies","genreId","Number","useEffect","processedMovies","filter","toLowerCase","includes","substring","genre_ids","sort","a","b","padding","backgroundMainContainer","Header","spacing","FilterCard","selectedOption","selectedOrder","MovieList","marginTop","left","transform","zIndex","position","Stack","Pagination","count","shape","boundaryCount","showFirstButton","showLastButton","backgroundImage","backgroundMainImage","backgroundSize","backgroundPosition","width","right","backgroundCardImage","backgroundDetailContainer","top","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","opacity"],"sourceRoot":""}