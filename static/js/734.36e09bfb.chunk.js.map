{"version":3,"file":"static/js/734.36e09bfb.chunk.js","mappings":"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","sources":["components/reviewForm/index.js"],"sourcesContent":["import Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport React, { useState, useContext } from \"react\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ratings = [\n    {\n        value: 5,\n        label: \"Excellent\",\n    },\n    {\n        value: 4,\n        label: \"Good\",\n    },\n    {\n        value: 3,\n        label: \"Average\",\n    },\n    {\n        value: 2,\n        label: \"Poor\",\n    },\n    {\n        value: 0,\n        label: \"Terrible\",\n    },\n];\n\nconst styles = {\n    root: {\n        marginTop: 2,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"left\",\n    },\n    form: {\n        width: \"100%\",\n        \"& > * \": {\n            marginTop: 2,\n        },\n    },\n    textField: {\n        width: \"40ch\",\n    },\n    submit: {\n        marginRight: 2,\n    },\n    snack: {\n        width: \"50%\",\n        \"& > * \": {\n            width: \"100%\",\n        },\n    },\n};\n\nconst ReviewForm = ({ movie }) => {\n    const context = useContext(MoviesContext);\n    const [rating, setRating] = useState(3);\n    const [open, setOpen] = useState(false);\n    const navigate = useNavigate();\n\n    const defaultValues = {\n        author: \"\",\n        review: \"\",\n        agree: false,\n        rating: \"3\",\n    };\n\n    const {\n        control,\n        formState: { errors },\n        handleSubmit,\n        reset,\n    } = useForm(defaultValues);\n\n    const handleRatingChange = (event) => {\n        setRating(event.target.value);\n    };\n\n    const onSubmit = (review) => {\n        review.movieId = movie.id;\n        review.rating = rating;\n        // console.log(review);\n        context.addReview(movie, review);\n        setOpen(true); // NEW\n    };\n\n    const handleSnackClose = (event) => {\n        setOpen(false);\n        navigate(\"/movies/favorites\");\n    };\n\n    return (\n        <Box component=\"div\" sx={styles.root}>\n            <Typography component=\"h2\" variant=\"h3\">\n                Write a review\n            </Typography>\n\n            <Snackbar\n                sx={styles.snack}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                open={open}\n                onClose={handleSnackClose}\n            >\n                <MuiAlert\n                    severity=\"success\"\n                    variant=\"filled\"\n                    onClose={handleSnackClose}\n                >\n                    <Typography variant=\"h4\">\n                        Thank you for submitting a review\n                    </Typography>\n                </MuiAlert>\n            </Snackbar>\n\n            <form sx={styles.form} onSubmit={handleSubmit(onSubmit)} noValidate>\n                <Controller\n                    name=\"author\"\n                    control={control}\n                    rules={{ required: \"Name is required\" }}\n                    defaultValue=\"\"\n                    render={({ field: { onChange, value } }) => (\n                        <TextField\n                            sx={{ width: \"40ch\" }}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            onChange={onChange}\n                            value={value}\n                            id=\"author\"\n                            label=\"Author's name\"\n                            name=\"author\"\n                            autoFocus\n                        />\n                    )}\n                />\n                {errors.author && (\n                    <Typography variant=\"h6\" component=\"p\">\n                        {errors.author.message}\n                    </Typography>\n                )}\n                <Controller\n                    name=\"review\"\n                    control={control}\n                    rules={{\n                        required: \"Review cannot be empty.\",\n                        minLength: { value: 10, message: \"Review is too short\" },\n                    }}\n                    defaultValue=\"\"\n                    render={({ field: { onChange, value } }) => (\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"review\"\n                            value={value}\n                            onChange={onChange}\n                            label=\"Review text\"\n                            id=\"review\"\n                            multiline\n                            minRows={10}\n                        />\n                    )}\n                />\n                {errors.review && (\n                    <Typography variant=\"h6\" component=\"p\">\n                        {errors.review.message}\n                    </Typography>\n                )}\n\n                <Controller\n                    control={control}\n                    name=\"rating\"\n                    render={({ field: { onChange, value } }) => (\n                        <TextField\n                            id=\"select-rating\"\n                            select\n                            variant=\"outlined\"\n                            label=\"Rating Select\"\n                            value={rating}\n                            onChange={handleRatingChange}\n                            helperText=\"Don't forget your rating\"\n                        >\n                            {ratings.map((option) => (\n                                <MenuItem key={option.value} value={option.value}>\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    )}\n                />\n\n                <Box sx={styles.buttons}>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        sx={styles.submit}\n                    >\n                        Submit\n                    </Button>\n                    <Button\n                        type=\"reset\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        sx={styles.submit}\n                        onClick={() => {\n                            reset({\n                                author: \"\",\n                                content: \"\",\n                            });\n                        }}\n                    >\n                        Reset\n                    </Button>\n                </Box>\n            </form>\n        </Box>\n    );\n};\n\nexport default ReviewForm;"],"names":["ratings","value","label","styles","root","marginTop","display","flexDirection","alignItems","form","width","textField","submit","marginRight","snack","_ref","movie","context","useContext","MoviesContext","_useState","useState","_useState2","_slicedToArray","rating","setRating","_useState3","_useState4","open","setOpen","navigate","useNavigate","_useForm","useForm","author","review","agree","control","errors","formState","handleSubmit","reset","handleRatingChange","event","target","handleSnackClose","_jsxs","Box","component","sx","children","_jsx","Typography","variant","Snackbar","anchorOrigin","vertical","horizontal","onClose","MuiAlert","severity","onSubmit","movieId","id","addReview","noValidate","Controller","name","rules","required","defaultValue","render","_ref2","_ref2$field","field","onChange","TextField","margin","autoFocus","message","minLength","_ref3","_ref3$field","fullWidth","multiline","minRows","_ref4","_ref4$field","select","helperText","map","option","MenuItem","buttons","Button","type","color","onClick","content"],"sourceRoot":""}